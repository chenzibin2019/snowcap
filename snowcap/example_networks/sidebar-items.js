initSidebarItems({"mod":[["repetitions","Repetitions for the diffiult gadget"]],"struct":[["AbileneNetwork","Abilene NetworkThis network is taken from topology-zoo, and consists of 11 internal routers. Variant 0 and 1 are for moving all flows through a new firewall, while variant 2 is used for generating more complex constraints."],["BipartiteCarouselFusion","Bipartite Gadget + Carousel GadgetThis is a fusion of the Bipartite Gadget and the Carousel Gadget. The Carousel Gadget is connected to the rest of the network at the router `bx` (which replaces router `rr`)."],["BipartiteGadget","Bipartite GadgetThis gadget is a generalized version of difficult gadget. Here, instead of having two branches, we can set the number dynamically. As for the repeated difficult gadget, the groups can also be repeated `R` times. In each group, there are `2N - 1` different modifiers. The routers of one group are named in the following convention:"],["CarouselGadget","Carousel GadgetExample from Stefano Vissichio et. al., figure 6 on page 7. It consists of 4 border routers (`b1`, `b2`, `b3` and `b4`), four bottom-level route reflectors (`r1`, `r2`, `r3` and `r4`) and one top-level route reflector `rr`. In addition, there are 5 external routers: (`e1`, `e2`, `e3`, `e4` and `er`). The difference from the initial and final configuration is the local pref setting."],["ChainGadget","Chain GadgetThis gadget consists of N+2 internal routers, and two external routers, arranged as follows:"],["DifficultGadgetComplete","DifficultGadgetCompleteThis is essentially the same network as the minimal difficult gadget, but we have added N+1 other routers in the following way (with N=5)"],["DifficultGadgetMinimal","Difficult Gadget MinimalAt the hart of this gadget, we have the unstable gadget, where the order of advertisement influences the final result:"],["DifficultGadgetRepeated","Difficult Gadget RepeatedThis is the `DifficultGadget`, but it repeats itself multiple times. They all connect at the router `bx`, and both `bx`and `ex` are shared amongst all n copies."],["EvilTwinGadget","Evil Twin GadgetExample from Laurent Vanbever et. al., Figure 4 on page 5. It contains four top-level route reflectors (`r1`, `r2`, `r3` and `r4`) connected in an iBGP full-mesh, two second-level route reflectors (`ra` and `rb`), and five border routers (`b1`, `bx`, `b2`, `b3`, `b4`), where two different prefixes are advertised by 5 external routers (`e1`, `ex`, `e2`, `e3`, `e4`)."],["FirewallNet","FirewallNetVariant 0:Hard Policy: `rx` must switch from using the old firewall between `r2` and `r6` (condition $x_1$), to using the new firewall between `r1` and `r4` (condition $x_2$). We have the following condition:"],["MediumNet","SimplenetSimplenet has 8 external routers, advertizing four different prefixes, and 14 internal routers."],["SimpleNet","SimplenetSimpleNet"],["SmallNet","SmallnetSmallNet"],["StateSpecificChainGadget","State Specific Chain GadgetThis is the same as the [`ChainGadget`], with a few differences. The first difference is that the link from `r(N-1)` to `b1` is set to a really high value, such that the routers prefer routes via `b1` in the normal case. During reconfiguration, the local-pref of both routers is increased to 200. If `b1` is reconfigured before `b0`, then the traffic temporarily shifts towards `b1`, which may cause forwarding loops. When `b0` is finally reconfigured, the problem is solved."],["VariableAbileneNetwork","Variable Abilene NetworkThis network is taken from topology-zoo, and consists of 11 internal routers."]],"trait":[["ExampleNetwork","Trait for easier access to example networks."]]});